// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Client/Protocol/CG.code.proto

#ifndef PROTOBUF_Client_2fProtocol_2fCG_2ecode_2eproto__INCLUDED
#define PROTOBUF_Client_2fProtocol_2fCG_2ecode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Client_2fProtocol_2fCG_2ecode_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMSG_C2G_HeartbeatImpl();
void InitDefaultsMSG_C2G_Heartbeat();
void InitDefaultsMSG_C2G_GetEncryptKeyImpl();
void InitDefaultsMSG_C2G_GetEncryptKey();
void InitDefaultsMSG_C2G_LoginImpl();
void InitDefaultsMSG_C2G_Login();
void InitDefaultsMSG_C2G_CreateRoleImpl();
void InitDefaultsMSG_C2G_CreateRole();
inline void InitDefaults() {
  InitDefaultsMSG_C2G_Heartbeat();
  InitDefaultsMSG_C2G_GetEncryptKey();
  InitDefaultsMSG_C2G_Login();
  InitDefaultsMSG_C2G_CreateRole();
}
}  // namespace protobuf_Client_2fProtocol_2fCG_2ecode_2eproto
namespace Protocol {
namespace Client {
namespace C2G {
class MSG_C2G_CreateRole;
class MSG_C2G_CreateRoleDefaultTypeInternal;
extern MSG_C2G_CreateRoleDefaultTypeInternal _MSG_C2G_CreateRole_default_instance_;
class MSG_C2G_GetEncryptKey;
class MSG_C2G_GetEncryptKeyDefaultTypeInternal;
extern MSG_C2G_GetEncryptKeyDefaultTypeInternal _MSG_C2G_GetEncryptKey_default_instance_;
class MSG_C2G_Heartbeat;
class MSG_C2G_HeartbeatDefaultTypeInternal;
extern MSG_C2G_HeartbeatDefaultTypeInternal _MSG_C2G_Heartbeat_default_instance_;
class MSG_C2G_Login;
class MSG_C2G_LoginDefaultTypeInternal;
extern MSG_C2G_LoginDefaultTypeInternal _MSG_C2G_Login_default_instance_;
}  // namespace C2G
}  // namespace Client
}  // namespace Protocol
namespace Protocol {
namespace Client {
namespace C2G {

// ===================================================================

class MSG_C2G_Heartbeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Client.C2G.MSG_C2G_Heartbeat) */ {
 public:
  MSG_C2G_Heartbeat();
  virtual ~MSG_C2G_Heartbeat();

  MSG_C2G_Heartbeat(const MSG_C2G_Heartbeat& from);

  inline MSG_C2G_Heartbeat& operator=(const MSG_C2G_Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MSG_C2G_Heartbeat(MSG_C2G_Heartbeat&& from) noexcept
    : MSG_C2G_Heartbeat() {
    *this = ::std::move(from);
  }

  inline MSG_C2G_Heartbeat& operator=(MSG_C2G_Heartbeat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_C2G_Heartbeat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_C2G_Heartbeat* internal_default_instance() {
    return reinterpret_cast<const MSG_C2G_Heartbeat*>(
               &_MSG_C2G_Heartbeat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MSG_C2G_Heartbeat* other);
  friend void swap(MSG_C2G_Heartbeat& a, MSG_C2G_Heartbeat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MSG_C2G_Heartbeat* New() const PROTOBUF_FINAL { return New(NULL); }

  MSG_C2G_Heartbeat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MSG_C2G_Heartbeat& from);
  void MergeFrom(const MSG_C2G_Heartbeat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MSG_C2G_Heartbeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Username = 2;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required int32 UId = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUIdFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.Client.C2G.MSG_C2G_Heartbeat)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_username();
  void clear_has_username();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 uid_;
  friend struct ::protobuf_Client_2fProtocol_2fCG_2ecode_2eproto::TableStruct;
  friend void ::protobuf_Client_2fProtocol_2fCG_2ecode_2eproto::InitDefaultsMSG_C2G_HeartbeatImpl();
};
// -------------------------------------------------------------------

class MSG_C2G_GetEncryptKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Client.C2G.MSG_C2G_GetEncryptKey) */ {
 public:
  MSG_C2G_GetEncryptKey();
  virtual ~MSG_C2G_GetEncryptKey();

  MSG_C2G_GetEncryptKey(const MSG_C2G_GetEncryptKey& from);

  inline MSG_C2G_GetEncryptKey& operator=(const MSG_C2G_GetEncryptKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MSG_C2G_GetEncryptKey(MSG_C2G_GetEncryptKey&& from) noexcept
    : MSG_C2G_GetEncryptKey() {
    *this = ::std::move(from);
  }

  inline MSG_C2G_GetEncryptKey& operator=(MSG_C2G_GetEncryptKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_C2G_GetEncryptKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_C2G_GetEncryptKey* internal_default_instance() {
    return reinterpret_cast<const MSG_C2G_GetEncryptKey*>(
               &_MSG_C2G_GetEncryptKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MSG_C2G_GetEncryptKey* other);
  friend void swap(MSG_C2G_GetEncryptKey& a, MSG_C2G_GetEncryptKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MSG_C2G_GetEncryptKey* New() const PROTOBUF_FINAL { return New(NULL); }

  MSG_C2G_GetEncryptKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MSG_C2G_GetEncryptKey& from);
  void MergeFrom(const MSG_C2G_GetEncryptKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MSG_C2G_GetEncryptKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Protocol.Client.C2G.MSG_C2G_GetEncryptKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_Client_2fProtocol_2fCG_2ecode_2eproto::TableStruct;
  friend void ::protobuf_Client_2fProtocol_2fCG_2ecode_2eproto::InitDefaultsMSG_C2G_GetEncryptKeyImpl();
};
// -------------------------------------------------------------------

class MSG_C2G_Login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Client.C2G.MSG_C2G_Login) */ {
 public:
  MSG_C2G_Login();
  virtual ~MSG_C2G_Login();

  MSG_C2G_Login(const MSG_C2G_Login& from);

  inline MSG_C2G_Login& operator=(const MSG_C2G_Login& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MSG_C2G_Login(MSG_C2G_Login&& from) noexcept
    : MSG_C2G_Login() {
    *this = ::std::move(from);
  }

  inline MSG_C2G_Login& operator=(MSG_C2G_Login&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_C2G_Login& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_C2G_Login* internal_default_instance() {
    return reinterpret_cast<const MSG_C2G_Login*>(
               &_MSG_C2G_Login_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MSG_C2G_Login* other);
  friend void swap(MSG_C2G_Login& a, MSG_C2G_Login& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MSG_C2G_Login* New() const PROTOBUF_FINAL { return New(NULL); }

  MSG_C2G_Login* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MSG_C2G_Login& from);
  void MergeFrom(const MSG_C2G_Login& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MSG_C2G_Login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required string Password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // required string Version = 3;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // required string Token = 4;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 4;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:Protocol.Client.C2G.MSG_C2G_Login)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_password();
  void clear_has_password();
  void set_has_version();
  void clear_has_version();
  void set_has_token();
  void clear_has_token();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  friend struct ::protobuf_Client_2fProtocol_2fCG_2ecode_2eproto::TableStruct;
  friend void ::protobuf_Client_2fProtocol_2fCG_2ecode_2eproto::InitDefaultsMSG_C2G_LoginImpl();
};
// -------------------------------------------------------------------

class MSG_C2G_CreateRole : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Client.C2G.MSG_C2G_CreateRole) */ {
 public:
  MSG_C2G_CreateRole();
  virtual ~MSG_C2G_CreateRole();

  MSG_C2G_CreateRole(const MSG_C2G_CreateRole& from);

  inline MSG_C2G_CreateRole& operator=(const MSG_C2G_CreateRole& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MSG_C2G_CreateRole(MSG_C2G_CreateRole&& from) noexcept
    : MSG_C2G_CreateRole() {
    *this = ::std::move(from);
  }

  inline MSG_C2G_CreateRole& operator=(MSG_C2G_CreateRole&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_C2G_CreateRole& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_C2G_CreateRole* internal_default_instance() {
    return reinterpret_cast<const MSG_C2G_CreateRole*>(
               &_MSG_C2G_CreateRole_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MSG_C2G_CreateRole* other);
  friend void swap(MSG_C2G_CreateRole& a, MSG_C2G_CreateRole& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MSG_C2G_CreateRole* New() const PROTOBUF_FINAL { return New(NULL); }

  MSG_C2G_CreateRole* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MSG_C2G_CreateRole& from);
  void MergeFrom(const MSG_C2G_CreateRole& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MSG_C2G_CreateRole* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string Sex = 2;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 2;
  const ::std::string& sex() const;
  void set_sex(const ::std::string& value);
  #if LANG_CXX11
  void set_sex(::std::string&& value);
  #endif
  void set_sex(const char* value);
  void set_sex(const char* value, size_t size);
  ::std::string* mutable_sex();
  ::std::string* release_sex();
  void set_allocated_sex(::std::string* sex);

  // required int32 InitModel = 3;
  bool has_initmodel() const;
  void clear_initmodel();
  static const int kInitModelFieldNumber = 3;
  ::google::protobuf::int32 initmodel() const;
  void set_initmodel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.Client.C2G.MSG_C2G_CreateRole)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_sex();
  void clear_has_sex();
  void set_has_initmodel();
  void clear_has_initmodel();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr sex_;
  ::google::protobuf::int32 initmodel_;
  friend struct ::protobuf_Client_2fProtocol_2fCG_2ecode_2eproto::TableStruct;
  friend void ::protobuf_Client_2fProtocol_2fCG_2ecode_2eproto::InitDefaultsMSG_C2G_CreateRoleImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MSG_C2G_Heartbeat

// required int32 UId = 1;
inline bool MSG_C2G_Heartbeat::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_C2G_Heartbeat::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_C2G_Heartbeat::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_C2G_Heartbeat::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 MSG_C2G_Heartbeat::uid() const {
  // @@protoc_insertion_point(field_get:Protocol.Client.C2G.MSG_C2G_Heartbeat.UId)
  return uid_;
}
inline void MSG_C2G_Heartbeat::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Protocol.Client.C2G.MSG_C2G_Heartbeat.UId)
}

// required string Username = 2;
inline bool MSG_C2G_Heartbeat::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_C2G_Heartbeat::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_C2G_Heartbeat::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_C2G_Heartbeat::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& MSG_C2G_Heartbeat::username() const {
  // @@protoc_insertion_point(field_get:Protocol.Client.C2G.MSG_C2G_Heartbeat.Username)
  return username_.GetNoArena();
}
inline void MSG_C2G_Heartbeat::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.Client.C2G.MSG_C2G_Heartbeat.Username)
}
#if LANG_CXX11
inline void MSG_C2G_Heartbeat::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Protocol.Client.C2G.MSG_C2G_Heartbeat.Username)
}
#endif
inline void MSG_C2G_Heartbeat::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.Client.C2G.MSG_C2G_Heartbeat.Username)
}
inline void MSG_C2G_Heartbeat::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.Client.C2G.MSG_C2G_Heartbeat.Username)
}
inline ::std::string* MSG_C2G_Heartbeat::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:Protocol.Client.C2G.MSG_C2G_Heartbeat.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MSG_C2G_Heartbeat::release_username() {
  // @@protoc_insertion_point(field_release:Protocol.Client.C2G.MSG_C2G_Heartbeat.Username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_C2G_Heartbeat::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Protocol.Client.C2G.MSG_C2G_Heartbeat.Username)
}

// -------------------------------------------------------------------

// MSG_C2G_GetEncryptKey

// -------------------------------------------------------------------

// MSG_C2G_Login

// required string Username = 1;
inline bool MSG_C2G_Login::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_C2G_Login::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_C2G_Login::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_C2G_Login::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& MSG_C2G_Login::username() const {
  // @@protoc_insertion_point(field_get:Protocol.Client.C2G.MSG_C2G_Login.Username)
  return username_.GetNoArena();
}
inline void MSG_C2G_Login::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.Client.C2G.MSG_C2G_Login.Username)
}
#if LANG_CXX11
inline void MSG_C2G_Login::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Protocol.Client.C2G.MSG_C2G_Login.Username)
}
#endif
inline void MSG_C2G_Login::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.Client.C2G.MSG_C2G_Login.Username)
}
inline void MSG_C2G_Login::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.Client.C2G.MSG_C2G_Login.Username)
}
inline ::std::string* MSG_C2G_Login::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:Protocol.Client.C2G.MSG_C2G_Login.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MSG_C2G_Login::release_username() {
  // @@protoc_insertion_point(field_release:Protocol.Client.C2G.MSG_C2G_Login.Username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_C2G_Login::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Protocol.Client.C2G.MSG_C2G_Login.Username)
}

// required string Password = 2;
inline bool MSG_C2G_Login::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_C2G_Login::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_C2G_Login::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_C2G_Login::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& MSG_C2G_Login::password() const {
  // @@protoc_insertion_point(field_get:Protocol.Client.C2G.MSG_C2G_Login.Password)
  return password_.GetNoArena();
}
inline void MSG_C2G_Login::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.Client.C2G.MSG_C2G_Login.Password)
}
#if LANG_CXX11
inline void MSG_C2G_Login::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Protocol.Client.C2G.MSG_C2G_Login.Password)
}
#endif
inline void MSG_C2G_Login::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.Client.C2G.MSG_C2G_Login.Password)
}
inline void MSG_C2G_Login::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.Client.C2G.MSG_C2G_Login.Password)
}
inline ::std::string* MSG_C2G_Login::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:Protocol.Client.C2G.MSG_C2G_Login.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MSG_C2G_Login::release_password() {
  // @@protoc_insertion_point(field_release:Protocol.Client.C2G.MSG_C2G_Login.Password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_C2G_Login::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Protocol.Client.C2G.MSG_C2G_Login.Password)
}

// required string Version = 3;
inline bool MSG_C2G_Login::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_C2G_Login::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_C2G_Login::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_C2G_Login::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& MSG_C2G_Login::version() const {
  // @@protoc_insertion_point(field_get:Protocol.Client.C2G.MSG_C2G_Login.Version)
  return version_.GetNoArena();
}
inline void MSG_C2G_Login::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.Client.C2G.MSG_C2G_Login.Version)
}
#if LANG_CXX11
inline void MSG_C2G_Login::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Protocol.Client.C2G.MSG_C2G_Login.Version)
}
#endif
inline void MSG_C2G_Login::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.Client.C2G.MSG_C2G_Login.Version)
}
inline void MSG_C2G_Login::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.Client.C2G.MSG_C2G_Login.Version)
}
inline ::std::string* MSG_C2G_Login::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:Protocol.Client.C2G.MSG_C2G_Login.Version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MSG_C2G_Login::release_version() {
  // @@protoc_insertion_point(field_release:Protocol.Client.C2G.MSG_C2G_Login.Version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_C2G_Login::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:Protocol.Client.C2G.MSG_C2G_Login.Version)
}

// required string Token = 4;
inline bool MSG_C2G_Login::has_token() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_C2G_Login::set_has_token() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_C2G_Login::clear_has_token() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_C2G_Login::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& MSG_C2G_Login::token() const {
  // @@protoc_insertion_point(field_get:Protocol.Client.C2G.MSG_C2G_Login.Token)
  return token_.GetNoArena();
}
inline void MSG_C2G_Login::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.Client.C2G.MSG_C2G_Login.Token)
}
#if LANG_CXX11
inline void MSG_C2G_Login::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Protocol.Client.C2G.MSG_C2G_Login.Token)
}
#endif
inline void MSG_C2G_Login::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.Client.C2G.MSG_C2G_Login.Token)
}
inline void MSG_C2G_Login::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.Client.C2G.MSG_C2G_Login.Token)
}
inline ::std::string* MSG_C2G_Login::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:Protocol.Client.C2G.MSG_C2G_Login.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MSG_C2G_Login::release_token() {
  // @@protoc_insertion_point(field_release:Protocol.Client.C2G.MSG_C2G_Login.Token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_C2G_Login::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:Protocol.Client.C2G.MSG_C2G_Login.Token)
}

// -------------------------------------------------------------------

// MSG_C2G_CreateRole

// required string Name = 1;
inline bool MSG_C2G_CreateRole::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_C2G_CreateRole::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_C2G_CreateRole::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_C2G_CreateRole::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& MSG_C2G_CreateRole::name() const {
  // @@protoc_insertion_point(field_get:Protocol.Client.C2G.MSG_C2G_CreateRole.Name)
  return name_.GetNoArena();
}
inline void MSG_C2G_CreateRole::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.Client.C2G.MSG_C2G_CreateRole.Name)
}
#if LANG_CXX11
inline void MSG_C2G_CreateRole::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Protocol.Client.C2G.MSG_C2G_CreateRole.Name)
}
#endif
inline void MSG_C2G_CreateRole::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.Client.C2G.MSG_C2G_CreateRole.Name)
}
inline void MSG_C2G_CreateRole::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.Client.C2G.MSG_C2G_CreateRole.Name)
}
inline ::std::string* MSG_C2G_CreateRole::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Protocol.Client.C2G.MSG_C2G_CreateRole.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MSG_C2G_CreateRole::release_name() {
  // @@protoc_insertion_point(field_release:Protocol.Client.C2G.MSG_C2G_CreateRole.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_C2G_CreateRole::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Protocol.Client.C2G.MSG_C2G_CreateRole.Name)
}

// required string Sex = 2;
inline bool MSG_C2G_CreateRole::has_sex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_C2G_CreateRole::set_has_sex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_C2G_CreateRole::clear_has_sex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_C2G_CreateRole::clear_sex() {
  sex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sex();
}
inline const ::std::string& MSG_C2G_CreateRole::sex() const {
  // @@protoc_insertion_point(field_get:Protocol.Client.C2G.MSG_C2G_CreateRole.Sex)
  return sex_.GetNoArena();
}
inline void MSG_C2G_CreateRole::set_sex(const ::std::string& value) {
  set_has_sex();
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.Client.C2G.MSG_C2G_CreateRole.Sex)
}
#if LANG_CXX11
inline void MSG_C2G_CreateRole::set_sex(::std::string&& value) {
  set_has_sex();
  sex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Protocol.Client.C2G.MSG_C2G_CreateRole.Sex)
}
#endif
inline void MSG_C2G_CreateRole::set_sex(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sex();
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.Client.C2G.MSG_C2G_CreateRole.Sex)
}
inline void MSG_C2G_CreateRole::set_sex(const char* value, size_t size) {
  set_has_sex();
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.Client.C2G.MSG_C2G_CreateRole.Sex)
}
inline ::std::string* MSG_C2G_CreateRole::mutable_sex() {
  set_has_sex();
  // @@protoc_insertion_point(field_mutable:Protocol.Client.C2G.MSG_C2G_CreateRole.Sex)
  return sex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MSG_C2G_CreateRole::release_sex() {
  // @@protoc_insertion_point(field_release:Protocol.Client.C2G.MSG_C2G_CreateRole.Sex)
  clear_has_sex();
  return sex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_C2G_CreateRole::set_allocated_sex(::std::string* sex) {
  if (sex != NULL) {
    set_has_sex();
  } else {
    clear_has_sex();
  }
  sex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sex);
  // @@protoc_insertion_point(field_set_allocated:Protocol.Client.C2G.MSG_C2G_CreateRole.Sex)
}

// required int32 InitModel = 3;
inline bool MSG_C2G_CreateRole::has_initmodel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_C2G_CreateRole::set_has_initmodel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_C2G_CreateRole::clear_has_initmodel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_C2G_CreateRole::clear_initmodel() {
  initmodel_ = 0;
  clear_has_initmodel();
}
inline ::google::protobuf::int32 MSG_C2G_CreateRole::initmodel() const {
  // @@protoc_insertion_point(field_get:Protocol.Client.C2G.MSG_C2G_CreateRole.InitModel)
  return initmodel_;
}
inline void MSG_C2G_CreateRole::set_initmodel(::google::protobuf::int32 value) {
  set_has_initmodel();
  initmodel_ = value;
  // @@protoc_insertion_point(field_set:Protocol.Client.C2G.MSG_C2G_CreateRole.InitModel)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace C2G
}  // namespace Client
}  // namespace Protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Client_2fProtocol_2fCG_2ecode_2eproto__INCLUDED
