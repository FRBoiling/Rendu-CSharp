// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Gate/Protocol/GC.code.proto

#include "Gate/Protocol/GC.code.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace Protocol {
namespace Gate {
namespace G2C {
class MSG_G2C_HeartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MSG_G2C_Heartbeat>
      _instance;
} _MSG_G2C_Heartbeat_default_instance_;
class MSG_G2C_EncryptKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MSG_G2C_EncryptKey>
      _instance;
} _MSG_G2C_EncryptKey_default_instance_;
class MSG_G2C_LoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MSG_G2C_Login>
      _instance;
} _MSG_G2C_Login_default_instance_;
class MSG_G2C_CreateRoleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MSG_G2C_CreateRole>
      _instance;
} _MSG_G2C_CreateRole_default_instance_;
class Role_BaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Role_BaseInfo>
      _instance;
} _Role_BaseInfo_default_instance_;
class Role_ModelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Role_Model>
      _instance;
} _Role_Model_default_instance_;
class Role_InfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Role_Info>
      _instance;
} _Role_Info_default_instance_;
}  // namespace G2C
}  // namespace Gate
}  // namespace Protocol
namespace protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto {
void InitDefaultsMSG_G2C_HeartbeatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Protocol::Gate::G2C::_MSG_G2C_Heartbeat_default_instance_;
    new (ptr) ::Protocol::Gate::G2C::MSG_G2C_Heartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::Gate::G2C::MSG_G2C_Heartbeat::InitAsDefaultInstance();
}

void InitDefaultsMSG_G2C_Heartbeat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMSG_G2C_HeartbeatImpl);
}

void InitDefaultsMSG_G2C_EncryptKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Protocol::Gate::G2C::_MSG_G2C_EncryptKey_default_instance_;
    new (ptr) ::Protocol::Gate::G2C::MSG_G2C_EncryptKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::Gate::G2C::MSG_G2C_EncryptKey::InitAsDefaultInstance();
}

void InitDefaultsMSG_G2C_EncryptKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMSG_G2C_EncryptKeyImpl);
}

void InitDefaultsMSG_G2C_LoginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsRole_BaseInfo();
  {
    void* ptr = &::Protocol::Gate::G2C::_MSG_G2C_Login_default_instance_;
    new (ptr) ::Protocol::Gate::G2C::MSG_G2C_Login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::Gate::G2C::MSG_G2C_Login::InitAsDefaultInstance();
}

void InitDefaultsMSG_G2C_Login() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMSG_G2C_LoginImpl);
}

void InitDefaultsMSG_G2C_CreateRoleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsRole_BaseInfo();
  {
    void* ptr = &::Protocol::Gate::G2C::_MSG_G2C_CreateRole_default_instance_;
    new (ptr) ::Protocol::Gate::G2C::MSG_G2C_CreateRole();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::Gate::G2C::MSG_G2C_CreateRole::InitAsDefaultInstance();
}

void InitDefaultsMSG_G2C_CreateRole() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMSG_G2C_CreateRoleImpl);
}

void InitDefaultsRole_BaseInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsRole_Model();
  {
    void* ptr = &::Protocol::Gate::G2C::_Role_BaseInfo_default_instance_;
    new (ptr) ::Protocol::Gate::G2C::Role_BaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::Gate::G2C::Role_BaseInfo::InitAsDefaultInstance();
}

void InitDefaultsRole_BaseInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRole_BaseInfoImpl);
}

void InitDefaultsRole_ModelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Protocol::Gate::G2C::_Role_Model_default_instance_;
    new (ptr) ::Protocol::Gate::G2C::Role_Model();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::Gate::G2C::Role_Model::InitAsDefaultInstance();
}

void InitDefaultsRole_Model() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRole_ModelImpl);
}

void InitDefaultsRole_InfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsRole_BaseInfo();
  {
    void* ptr = &::Protocol::Gate::G2C::_Role_Info_default_instance_;
    new (ptr) ::Protocol::Gate::G2C::Role_Info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::Gate::G2C::Role_Info::InitAsDefaultInstance();
}

void InitDefaultsRole_Info() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRole_InfoImpl);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_Heartbeat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_Heartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_Heartbeat, uid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_EncryptKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_EncryptKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_EncryptKey, encryptkey_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_Login, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_Login, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_Login, rolelist_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_CreateRole, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_CreateRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_CreateRole, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::MSG_G2C_CreateRole, role_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_BaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_BaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_BaseInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_BaseInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_BaseInfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_BaseInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_BaseInfo, model_),
  2,
  0,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_Model, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_Model, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_Model, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_Model, body_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_Info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::Gate::G2C::Role_Info, baseinfo_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::Protocol::Gate::G2C::MSG_G2C_Heartbeat)},
  { 7, 13, sizeof(::Protocol::Gate::G2C::MSG_G2C_EncryptKey)},
  { 14, 21, sizeof(::Protocol::Gate::G2C::MSG_G2C_Login)},
  { 23, 30, sizeof(::Protocol::Gate::G2C::MSG_G2C_CreateRole)},
  { 32, 42, sizeof(::Protocol::Gate::G2C::Role_BaseInfo)},
  { 47, 54, sizeof(::Protocol::Gate::G2C::Role_Model)},
  { 56, 62, sizeof(::Protocol::Gate::G2C::Role_Info)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Protocol::Gate::G2C::_MSG_G2C_Heartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Protocol::Gate::G2C::_MSG_G2C_EncryptKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Protocol::Gate::G2C::_MSG_G2C_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Protocol::Gate::G2C::_MSG_G2C_CreateRole_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Protocol::Gate::G2C::_Role_BaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Protocol::Gate::G2C::_Role_Model_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Protocol::Gate::G2C::_Role_Info_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Gate/Protocol/GC.code.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033Gate/Protocol/GC.code.proto\022\021Protocol."
      "Gate.G2C\" \n\021MSG_G2C_Heartbeat\022\013\n\003UId\030\001 \002"
      "(\005\"(\n\022MSG_G2C_EncryptKey\022\022\n\nEncryptKey\030\001"
      " \002(\t\"S\n\rMSG_G2C_Login\022\016\n\006Result\030\001 \002(\005\0222\n"
      "\010RoleList\030\002 \003(\0132 .Protocol.Gate.G2C.Role"
      "_BaseInfo\"T\n\022MSG_G2C_CreateRole\022\016\n\006Resul"
      "t\030\001 \002(\005\022.\n\004Role\030\002 \002(\0132 .Protocol.Gate.G2"
      "C.Role_BaseInfo\"s\n\rRole_BaseInfo\022\n\n\002Id\030\001"
      " \002(\005\022\014\n\004Name\030\002 \002(\t\022\013\n\003Sex\030\003 \002(\005\022\r\n\005Level"
      "\030\004 \002(\005\022,\n\005Model\030\005 \002(\0132\035.Protocol.Gate.G2"
      "C.Role_Model\"(\n\nRole_Model\022\014\n\004Head\030\001 \002(\005"
      "\022\014\n\004Body\030\002 \002(\005\"\?\n\tRole_Info\0222\n\010BaseInfo\030"
      "\001 \002(\0132 .Protocol.Gate.G2C.Role_BaseInfo"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 519);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Gate/Protocol/GC.code.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto
namespace Protocol {
namespace Gate {
namespace G2C {

// ===================================================================

void MSG_G2C_Heartbeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MSG_G2C_Heartbeat::kUIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MSG_G2C_Heartbeat::MSG_G2C_Heartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsMSG_G2C_Heartbeat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
}
MSG_G2C_Heartbeat::MSG_G2C_Heartbeat(const MSG_G2C_Heartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
}

void MSG_G2C_Heartbeat::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0;
}

MSG_G2C_Heartbeat::~MSG_G2C_Heartbeat() {
  // @@protoc_insertion_point(destructor:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  SharedDtor();
}

void MSG_G2C_Heartbeat::SharedDtor() {
}

void MSG_G2C_Heartbeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_G2C_Heartbeat::descriptor() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MSG_G2C_Heartbeat& MSG_G2C_Heartbeat::default_instance() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsMSG_G2C_Heartbeat();
  return *internal_default_instance();
}

MSG_G2C_Heartbeat* MSG_G2C_Heartbeat::New(::google::protobuf::Arena* arena) const {
  MSG_G2C_Heartbeat* n = new MSG_G2C_Heartbeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MSG_G2C_Heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MSG_G2C_Heartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 UId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  return false;
#undef DO_
}

void MSG_G2C_Heartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 UId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
}

::google::protobuf::uint8* MSG_G2C_Heartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 UId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  return target;
}

size_t MSG_G2C_Heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 UId = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_G2C_Heartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_G2C_Heartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MSG_G2C_Heartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
    MergeFrom(*source);
  }
}

void MSG_G2C_Heartbeat::MergeFrom(const MSG_G2C_Heartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uid()) {
    set_uid(from.uid());
  }
}

void MSG_G2C_Heartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_G2C_Heartbeat::CopyFrom(const MSG_G2C_Heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.Gate.G2C.MSG_G2C_Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_G2C_Heartbeat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MSG_G2C_Heartbeat::Swap(MSG_G2C_Heartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MSG_G2C_Heartbeat::InternalSwap(MSG_G2C_Heartbeat* other) {
  using std::swap;
  swap(uid_, other->uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MSG_G2C_Heartbeat::GetMetadata() const {
  protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MSG_G2C_EncryptKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MSG_G2C_EncryptKey::kEncryptKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MSG_G2C_EncryptKey::MSG_G2C_EncryptKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsMSG_G2C_EncryptKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
}
MSG_G2C_EncryptKey::MSG_G2C_EncryptKey(const MSG_G2C_EncryptKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encryptkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encryptkey()) {
    encryptkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryptkey_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
}

void MSG_G2C_EncryptKey::SharedCtor() {
  _cached_size_ = 0;
  encryptkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MSG_G2C_EncryptKey::~MSG_G2C_EncryptKey() {
  // @@protoc_insertion_point(destructor:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  SharedDtor();
}

void MSG_G2C_EncryptKey::SharedDtor() {
  encryptkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MSG_G2C_EncryptKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_G2C_EncryptKey::descriptor() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MSG_G2C_EncryptKey& MSG_G2C_EncryptKey::default_instance() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsMSG_G2C_EncryptKey();
  return *internal_default_instance();
}

MSG_G2C_EncryptKey* MSG_G2C_EncryptKey::New(::google::protobuf::Arena* arena) const {
  MSG_G2C_EncryptKey* n = new MSG_G2C_EncryptKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MSG_G2C_EncryptKey::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!encryptkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*encryptkey_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MSG_G2C_EncryptKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string EncryptKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encryptkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->encryptkey().data(), static_cast<int>(this->encryptkey().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Protocol.Gate.G2C.MSG_G2C_EncryptKey.EncryptKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  return false;
#undef DO_
}

void MSG_G2C_EncryptKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string EncryptKey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encryptkey().data(), static_cast<int>(this->encryptkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Protocol.Gate.G2C.MSG_G2C_EncryptKey.EncryptKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->encryptkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
}

::google::protobuf::uint8* MSG_G2C_EncryptKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string EncryptKey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encryptkey().data(), static_cast<int>(this->encryptkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Protocol.Gate.G2C.MSG_G2C_EncryptKey.EncryptKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->encryptkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  return target;
}

size_t MSG_G2C_EncryptKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string EncryptKey = 1;
  if (has_encryptkey()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->encryptkey());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_G2C_EncryptKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_G2C_EncryptKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MSG_G2C_EncryptKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
    MergeFrom(*source);
  }
}

void MSG_G2C_EncryptKey::MergeFrom(const MSG_G2C_EncryptKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_encryptkey()) {
    set_has_encryptkey();
    encryptkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryptkey_);
  }
}

void MSG_G2C_EncryptKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_G2C_EncryptKey::CopyFrom(const MSG_G2C_EncryptKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.Gate.G2C.MSG_G2C_EncryptKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_G2C_EncryptKey::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MSG_G2C_EncryptKey::Swap(MSG_G2C_EncryptKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MSG_G2C_EncryptKey::InternalSwap(MSG_G2C_EncryptKey* other) {
  using std::swap;
  encryptkey_.Swap(&other->encryptkey_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MSG_G2C_EncryptKey::GetMetadata() const {
  protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MSG_G2C_Login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MSG_G2C_Login::kResultFieldNumber;
const int MSG_G2C_Login::kRoleListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MSG_G2C_Login::MSG_G2C_Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsMSG_G2C_Login();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.Gate.G2C.MSG_G2C_Login)
}
MSG_G2C_Login::MSG_G2C_Login(const MSG_G2C_Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      rolelist_(from.rolelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:Protocol.Gate.G2C.MSG_G2C_Login)
}

void MSG_G2C_Login::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

MSG_G2C_Login::~MSG_G2C_Login() {
  // @@protoc_insertion_point(destructor:Protocol.Gate.G2C.MSG_G2C_Login)
  SharedDtor();
}

void MSG_G2C_Login::SharedDtor() {
}

void MSG_G2C_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_G2C_Login::descriptor() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MSG_G2C_Login& MSG_G2C_Login::default_instance() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsMSG_G2C_Login();
  return *internal_default_instance();
}

MSG_G2C_Login* MSG_G2C_Login::New(::google::protobuf::Arena* arena) const {
  MSG_G2C_Login* n = new MSG_G2C_Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MSG_G2C_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.Gate.G2C.MSG_G2C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rolelist_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MSG_G2C_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protocol.Gate.G2C.MSG_G2C_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Protocol.Gate.G2C.Role_BaseInfo RoleList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rolelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protocol.Gate.G2C.MSG_G2C_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protocol.Gate.G2C.MSG_G2C_Login)
  return false;
#undef DO_
}

void MSG_G2C_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protocol.Gate.G2C.MSG_G2C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .Protocol.Gate.G2C.Role_BaseInfo RoleList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rolelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rolelist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protocol.Gate.G2C.MSG_G2C_Login)
}

::google::protobuf::uint8* MSG_G2C_Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.Gate.G2C.MSG_G2C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .Protocol.Gate.G2C.Role_BaseInfo RoleList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rolelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->rolelist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.Gate.G2C.MSG_G2C_Login)
  return target;
}

size_t MSG_G2C_Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.Gate.G2C.MSG_G2C_Login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 Result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .Protocol.Gate.G2C.Role_BaseInfo RoleList = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->rolelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rolelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_G2C_Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.Gate.G2C.MSG_G2C_Login)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_G2C_Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MSG_G2C_Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.Gate.G2C.MSG_G2C_Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.Gate.G2C.MSG_G2C_Login)
    MergeFrom(*source);
  }
}

void MSG_G2C_Login::MergeFrom(const MSG_G2C_Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.Gate.G2C.MSG_G2C_Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rolelist_.MergeFrom(from.rolelist_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void MSG_G2C_Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.Gate.G2C.MSG_G2C_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_G2C_Login::CopyFrom(const MSG_G2C_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.Gate.G2C.MSG_G2C_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_G2C_Login::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rolelist())) return false;
  return true;
}

void MSG_G2C_Login::Swap(MSG_G2C_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MSG_G2C_Login::InternalSwap(MSG_G2C_Login* other) {
  using std::swap;
  rolelist_.InternalSwap(&other->rolelist_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MSG_G2C_Login::GetMetadata() const {
  protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MSG_G2C_CreateRole::InitAsDefaultInstance() {
  ::Protocol::Gate::G2C::_MSG_G2C_CreateRole_default_instance_._instance.get_mutable()->role_ = const_cast< ::Protocol::Gate::G2C::Role_BaseInfo*>(
      ::Protocol::Gate::G2C::Role_BaseInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MSG_G2C_CreateRole::kResultFieldNumber;
const int MSG_G2C_CreateRole::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MSG_G2C_CreateRole::MSG_G2C_CreateRole()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsMSG_G2C_CreateRole();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.Gate.G2C.MSG_G2C_CreateRole)
}
MSG_G2C_CreateRole::MSG_G2C_CreateRole(const MSG_G2C_CreateRole& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_role()) {
    role_ = new ::Protocol::Gate::G2C::Role_BaseInfo(*from.role_);
  } else {
    role_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:Protocol.Gate.G2C.MSG_G2C_CreateRole)
}

void MSG_G2C_CreateRole::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&role_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&role_)) + sizeof(result_));
}

MSG_G2C_CreateRole::~MSG_G2C_CreateRole() {
  // @@protoc_insertion_point(destructor:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  SharedDtor();
}

void MSG_G2C_CreateRole::SharedDtor() {
  if (this != internal_default_instance()) delete role_;
}

void MSG_G2C_CreateRole::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_G2C_CreateRole::descriptor() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MSG_G2C_CreateRole& MSG_G2C_CreateRole::default_instance() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsMSG_G2C_CreateRole();
  return *internal_default_instance();
}

MSG_G2C_CreateRole* MSG_G2C_CreateRole::New(::google::protobuf::Arena* arena) const {
  MSG_G2C_CreateRole* n = new MSG_G2C_CreateRole;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MSG_G2C_CreateRole::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(role_ != NULL);
    role_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MSG_G2C_CreateRole::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Protocol.Gate.G2C.Role_BaseInfo Role = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_role()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  return false;
#undef DO_
}

void MSG_G2C_CreateRole::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required .Protocol.Gate.G2C.Role_BaseInfo Role = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->role_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protocol.Gate.G2C.MSG_G2C_CreateRole)
}

::google::protobuf::uint8* MSG_G2C_CreateRole::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required .Protocol.Gate.G2C.Role_BaseInfo Role = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->role_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  return target;
}

size_t MSG_G2C_CreateRole::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  size_t total_size = 0;

  if (has_role()) {
    // required .Protocol.Gate.G2C.Role_BaseInfo Role = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->role_);
  }

  if (has_result()) {
    // required int32 Result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  return total_size;
}
size_t MSG_G2C_CreateRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Protocol.Gate.G2C.Role_BaseInfo Role = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->role_);

    // required int32 Result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_G2C_CreateRole::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_G2C_CreateRole* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MSG_G2C_CreateRole>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.Gate.G2C.MSG_G2C_CreateRole)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.Gate.G2C.MSG_G2C_CreateRole)
    MergeFrom(*source);
  }
}

void MSG_G2C_CreateRole::MergeFrom(const MSG_G2C_CreateRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_role()->::Protocol::Gate::G2C::Role_BaseInfo::MergeFrom(from.role());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_G2C_CreateRole::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_G2C_CreateRole::CopyFrom(const MSG_G2C_CreateRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.Gate.G2C.MSG_G2C_CreateRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_G2C_CreateRole::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_role()) {
    if (!this->role_->IsInitialized()) return false;
  }
  return true;
}

void MSG_G2C_CreateRole::Swap(MSG_G2C_CreateRole* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MSG_G2C_CreateRole::InternalSwap(MSG_G2C_CreateRole* other) {
  using std::swap;
  swap(role_, other->role_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MSG_G2C_CreateRole::GetMetadata() const {
  protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Role_BaseInfo::InitAsDefaultInstance() {
  ::Protocol::Gate::G2C::_Role_BaseInfo_default_instance_._instance.get_mutable()->model_ = const_cast< ::Protocol::Gate::G2C::Role_Model*>(
      ::Protocol::Gate::G2C::Role_Model::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Role_BaseInfo::kIdFieldNumber;
const int Role_BaseInfo::kNameFieldNumber;
const int Role_BaseInfo::kSexFieldNumber;
const int Role_BaseInfo::kLevelFieldNumber;
const int Role_BaseInfo::kModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Role_BaseInfo::Role_BaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsRole_BaseInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.Gate.G2C.Role_BaseInfo)
}
Role_BaseInfo::Role_BaseInfo(const Role_BaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_model()) {
    model_ = new ::Protocol::Gate::G2C::Role_Model(*from.model_);
  } else {
    model_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&id_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:Protocol.Gate.G2C.Role_BaseInfo)
}

void Role_BaseInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&model_)) + sizeof(level_));
}

Role_BaseInfo::~Role_BaseInfo() {
  // @@protoc_insertion_point(destructor:Protocol.Gate.G2C.Role_BaseInfo)
  SharedDtor();
}

void Role_BaseInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete model_;
}

void Role_BaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Role_BaseInfo::descriptor() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Role_BaseInfo& Role_BaseInfo::default_instance() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsRole_BaseInfo();
  return *internal_default_instance();
}

Role_BaseInfo* Role_BaseInfo::New(::google::protobuf::Arena* arena) const {
  Role_BaseInfo* n = new Role_BaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Role_BaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.Gate.G2C.Role_BaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(model_ != NULL);
      model_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&level_) -
        reinterpret_cast<char*>(&id_)) + sizeof(level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Role_BaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protocol.Gate.G2C.Role_BaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Protocol.Gate.G2C.Role_BaseInfo.Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Protocol.Gate.G2C.Role_Model Model = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protocol.Gate.G2C.Role_BaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protocol.Gate.G2C.Role_BaseInfo)
  return false;
#undef DO_
}

void Role_BaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protocol.Gate.G2C.Role_BaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string Name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Protocol.Gate.G2C.Role_BaseInfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required int32 Sex = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sex(), output);
  }

  // required int32 Level = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // required .Protocol.Gate.G2C.Role_Model Model = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->model_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protocol.Gate.G2C.Role_BaseInfo)
}

::google::protobuf::uint8* Role_BaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.Gate.G2C.Role_BaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string Name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Protocol.Gate.G2C.Role_BaseInfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required int32 Sex = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sex(), target);
  }

  // required int32 Level = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // required .Protocol.Gate.G2C.Role_Model Model = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->model_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.Gate.G2C.Role_BaseInfo)
  return target;
}

size_t Role_BaseInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Protocol.Gate.G2C.Role_BaseInfo)
  size_t total_size = 0;

  if (has_name()) {
    // required string Name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_model()) {
    // required .Protocol.Gate.G2C.Role_Model Model = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->model_);
  }

  if (has_id()) {
    // required int32 Id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_sex()) {
    // required int32 Sex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  if (has_level()) {
    // required int32 Level = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  return total_size;
}
size_t Role_BaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.Gate.G2C.Role_BaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string Name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .Protocol.Gate.G2C.Role_Model Model = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->model_);

    // required int32 Id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 Sex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());

    // required int32 Level = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Role_BaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.Gate.G2C.Role_BaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Role_BaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Role_BaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.Gate.G2C.Role_BaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.Gate.G2C.Role_BaseInfo)
    MergeFrom(*source);
  }
}

void Role_BaseInfo::MergeFrom(const Role_BaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.Gate.G2C.Role_BaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_model()->::Protocol::Gate::G2C::Role_Model::MergeFrom(from.model());
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000010u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Role_BaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.Gate.G2C.Role_BaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Role_BaseInfo::CopyFrom(const Role_BaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.Gate.G2C.Role_BaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Role_BaseInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_model()) {
    if (!this->model_->IsInitialized()) return false;
  }
  return true;
}

void Role_BaseInfo::Swap(Role_BaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Role_BaseInfo::InternalSwap(Role_BaseInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(model_, other->model_);
  swap(id_, other->id_);
  swap(sex_, other->sex_);
  swap(level_, other->level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Role_BaseInfo::GetMetadata() const {
  protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Role_Model::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Role_Model::kHeadFieldNumber;
const int Role_Model::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Role_Model::Role_Model()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsRole_Model();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.Gate.G2C.Role_Model)
}
Role_Model::Role_Model(const Role_Model& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&head_, &from.head_,
    static_cast<size_t>(reinterpret_cast<char*>(&body_) -
    reinterpret_cast<char*>(&head_)) + sizeof(body_));
  // @@protoc_insertion_point(copy_constructor:Protocol.Gate.G2C.Role_Model)
}

void Role_Model::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&head_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&head_)) + sizeof(body_));
}

Role_Model::~Role_Model() {
  // @@protoc_insertion_point(destructor:Protocol.Gate.G2C.Role_Model)
  SharedDtor();
}

void Role_Model::SharedDtor() {
}

void Role_Model::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Role_Model::descriptor() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Role_Model& Role_Model::default_instance() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsRole_Model();
  return *internal_default_instance();
}

Role_Model* Role_Model::New(::google::protobuf::Arena* arena) const {
  Role_Model* n = new Role_Model;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Role_Model::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.Gate.G2C.Role_Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&head_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&body_) -
        reinterpret_cast<char*>(&head_)) + sizeof(body_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Role_Model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protocol.Gate.G2C.Role_Model)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_head();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &head_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_body();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &body_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protocol.Gate.G2C.Role_Model)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protocol.Gate.G2C.Role_Model)
  return false;
#undef DO_
}

void Role_Model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protocol.Gate.G2C.Role_Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Head = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->head(), output);
  }

  // required int32 Body = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protocol.Gate.G2C.Role_Model)
}

::google::protobuf::uint8* Role_Model::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.Gate.G2C.Role_Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Head = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->head(), target);
  }

  // required int32 Body = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.Gate.G2C.Role_Model)
  return target;
}

size_t Role_Model::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Protocol.Gate.G2C.Role_Model)
  size_t total_size = 0;

  if (has_head()) {
    // required int32 Head = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->head());
  }

  if (has_body()) {
    // required int32 Body = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->body());
  }

  return total_size;
}
size_t Role_Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.Gate.G2C.Role_Model)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 Head = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->head());

    // required int32 Body = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->body());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Role_Model::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.Gate.G2C.Role_Model)
  GOOGLE_DCHECK_NE(&from, this);
  const Role_Model* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Role_Model>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.Gate.G2C.Role_Model)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.Gate.G2C.Role_Model)
    MergeFrom(*source);
  }
}

void Role_Model::MergeFrom(const Role_Model& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.Gate.G2C.Role_Model)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      head_ = from.head_;
    }
    if (cached_has_bits & 0x00000002u) {
      body_ = from.body_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Role_Model::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.Gate.G2C.Role_Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Role_Model::CopyFrom(const Role_Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.Gate.G2C.Role_Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Role_Model::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Role_Model::Swap(Role_Model* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Role_Model::InternalSwap(Role_Model* other) {
  using std::swap;
  swap(head_, other->head_);
  swap(body_, other->body_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Role_Model::GetMetadata() const {
  protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Role_Info::InitAsDefaultInstance() {
  ::Protocol::Gate::G2C::_Role_Info_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::Protocol::Gate::G2C::Role_BaseInfo*>(
      ::Protocol::Gate::G2C::Role_BaseInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Role_Info::kBaseInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Role_Info::Role_Info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsRole_Info();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.Gate.G2C.Role_Info)
}
Role_Info::Role_Info(const Role_Info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::Protocol::Gate::G2C::Role_BaseInfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.Gate.G2C.Role_Info)
}

void Role_Info::SharedCtor() {
  _cached_size_ = 0;
  baseinfo_ = NULL;
}

Role_Info::~Role_Info() {
  // @@protoc_insertion_point(destructor:Protocol.Gate.G2C.Role_Info)
  SharedDtor();
}

void Role_Info::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
}

void Role_Info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Role_Info::descriptor() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Role_Info& Role_Info::default_instance() {
  ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::InitDefaultsRole_Info();
  return *internal_default_instance();
}

Role_Info* Role_Info::New(::google::protobuf::Arena* arena) const {
  Role_Info* n = new Role_Info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Role_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.Gate.G2C.Role_Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(baseinfo_ != NULL);
    baseinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Role_Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protocol.Gate.G2C.Role_Info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Protocol.Gate.G2C.Role_BaseInfo BaseInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protocol.Gate.G2C.Role_Info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protocol.Gate.G2C.Role_Info)
  return false;
#undef DO_
}

void Role_Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protocol.Gate.G2C.Role_Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Protocol.Gate.G2C.Role_BaseInfo BaseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protocol.Gate.G2C.Role_Info)
}

::google::protobuf::uint8* Role_Info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.Gate.G2C.Role_Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Protocol.Gate.G2C.Role_BaseInfo BaseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->baseinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.Gate.G2C.Role_Info)
  return target;
}

size_t Role_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.Gate.G2C.Role_Info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Protocol.Gate.G2C.Role_BaseInfo BaseInfo = 1;
  if (has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->baseinfo_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Role_Info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.Gate.G2C.Role_Info)
  GOOGLE_DCHECK_NE(&from, this);
  const Role_Info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Role_Info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.Gate.G2C.Role_Info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.Gate.G2C.Role_Info)
    MergeFrom(*source);
  }
}

void Role_Info::MergeFrom(const Role_Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.Gate.G2C.Role_Info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::Protocol::Gate::G2C::Role_BaseInfo::MergeFrom(from.baseinfo());
  }
}

void Role_Info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.Gate.G2C.Role_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Role_Info::CopyFrom(const Role_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.Gate.G2C.Role_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Role_Info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_baseinfo()) {
    if (!this->baseinfo_->IsInitialized()) return false;
  }
  return true;
}

void Role_Info::Swap(Role_Info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Role_Info::InternalSwap(Role_Info* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Role_Info::GetMetadata() const {
  protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Gate_2fProtocol_2fGC_2ecode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace G2C
}  // namespace Gate
}  // namespace Protocol

// @@protoc_insertion_point(global_scope)
