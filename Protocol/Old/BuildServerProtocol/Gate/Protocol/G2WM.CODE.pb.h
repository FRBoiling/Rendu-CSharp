// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Gate/Protocol/G2WM.CODE.proto

#ifndef PROTOBUF_Gate_2fProtocol_2fG2WM_2eCODE_2eproto__INCLUDED
#define PROTOBUF_Gate_2fProtocol_2fG2WM_2eCODE_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Gate_2fProtocol_2fG2WM_2eCODE_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMSG_G2WM_HeartbeatImpl();
void InitDefaultsMSG_G2WM_Heartbeat();
void InitDefaultsMSG_G2WM_CreateRoleIdImpl();
void InitDefaultsMSG_G2WM_CreateRoleId();
inline void InitDefaults() {
  InitDefaultsMSG_G2WM_Heartbeat();
  InitDefaultsMSG_G2WM_CreateRoleId();
}
}  // namespace protobuf_Gate_2fProtocol_2fG2WM_2eCODE_2eproto
namespace Protocol {
namespace Gate {
namespace G2WM {
class MSG_G2WM_CreateRoleId;
class MSG_G2WM_CreateRoleIdDefaultTypeInternal;
extern MSG_G2WM_CreateRoleIdDefaultTypeInternal _MSG_G2WM_CreateRoleId_default_instance_;
class MSG_G2WM_Heartbeat;
class MSG_G2WM_HeartbeatDefaultTypeInternal;
extern MSG_G2WM_HeartbeatDefaultTypeInternal _MSG_G2WM_Heartbeat_default_instance_;
}  // namespace G2WM
}  // namespace Gate
}  // namespace Protocol
namespace Protocol {
namespace Gate {
namespace G2WM {

// ===================================================================

class MSG_G2WM_Heartbeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Gate.G2WM.MSG_G2WM_Heartbeat) */ {
 public:
  MSG_G2WM_Heartbeat();
  virtual ~MSG_G2WM_Heartbeat();

  MSG_G2WM_Heartbeat(const MSG_G2WM_Heartbeat& from);

  inline MSG_G2WM_Heartbeat& operator=(const MSG_G2WM_Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MSG_G2WM_Heartbeat(MSG_G2WM_Heartbeat&& from) noexcept
    : MSG_G2WM_Heartbeat() {
    *this = ::std::move(from);
  }

  inline MSG_G2WM_Heartbeat& operator=(MSG_G2WM_Heartbeat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_G2WM_Heartbeat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_G2WM_Heartbeat* internal_default_instance() {
    return reinterpret_cast<const MSG_G2WM_Heartbeat*>(
               &_MSG_G2WM_Heartbeat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MSG_G2WM_Heartbeat* other);
  friend void swap(MSG_G2WM_Heartbeat& a, MSG_G2WM_Heartbeat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MSG_G2WM_Heartbeat* New() const PROTOBUF_FINAL { return New(NULL); }

  MSG_G2WM_Heartbeat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MSG_G2WM_Heartbeat& from);
  void MergeFrom(const MSG_G2WM_Heartbeat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MSG_G2WM_Heartbeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 UId = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUIdFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.Gate.G2WM.MSG_G2WM_Heartbeat)
 private:
  void set_has_uid();
  void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 uid_;
  friend struct ::protobuf_Gate_2fProtocol_2fG2WM_2eCODE_2eproto::TableStruct;
  friend void ::protobuf_Gate_2fProtocol_2fG2WM_2eCODE_2eproto::InitDefaultsMSG_G2WM_HeartbeatImpl();
};
// -------------------------------------------------------------------

class MSG_G2WM_CreateRoleId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Gate.G2WM.MSG_G2WM_CreateRoleId) */ {
 public:
  MSG_G2WM_CreateRoleId();
  virtual ~MSG_G2WM_CreateRoleId();

  MSG_G2WM_CreateRoleId(const MSG_G2WM_CreateRoleId& from);

  inline MSG_G2WM_CreateRoleId& operator=(const MSG_G2WM_CreateRoleId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MSG_G2WM_CreateRoleId(MSG_G2WM_CreateRoleId&& from) noexcept
    : MSG_G2WM_CreateRoleId() {
    *this = ::std::move(from);
  }

  inline MSG_G2WM_CreateRoleId& operator=(MSG_G2WM_CreateRoleId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_G2WM_CreateRoleId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_G2WM_CreateRoleId* internal_default_instance() {
    return reinterpret_cast<const MSG_G2WM_CreateRoleId*>(
               &_MSG_G2WM_CreateRoleId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MSG_G2WM_CreateRoleId* other);
  friend void swap(MSG_G2WM_CreateRoleId& a, MSG_G2WM_CreateRoleId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MSG_G2WM_CreateRoleId* New() const PROTOBUF_FINAL { return New(NULL); }

  MSG_G2WM_CreateRoleId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MSG_G2WM_CreateRoleId& from);
  void MergeFrom(const MSG_G2WM_CreateRoleId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MSG_G2WM_CreateRoleId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:Protocol.Gate.G2WM.MSG_G2WM_CreateRoleId)
 private:
  void set_has_username();
  void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  friend struct ::protobuf_Gate_2fProtocol_2fG2WM_2eCODE_2eproto::TableStruct;
  friend void ::protobuf_Gate_2fProtocol_2fG2WM_2eCODE_2eproto::InitDefaultsMSG_G2WM_CreateRoleIdImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MSG_G2WM_Heartbeat

// required int32 UId = 1;
inline bool MSG_G2WM_Heartbeat::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_G2WM_Heartbeat::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_G2WM_Heartbeat::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_G2WM_Heartbeat::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 MSG_G2WM_Heartbeat::uid() const {
  // @@protoc_insertion_point(field_get:Protocol.Gate.G2WM.MSG_G2WM_Heartbeat.UId)
  return uid_;
}
inline void MSG_G2WM_Heartbeat::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Protocol.Gate.G2WM.MSG_G2WM_Heartbeat.UId)
}

// -------------------------------------------------------------------

// MSG_G2WM_CreateRoleId

// required string Username = 1;
inline bool MSG_G2WM_CreateRoleId::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_G2WM_CreateRoleId::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_G2WM_CreateRoleId::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_G2WM_CreateRoleId::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& MSG_G2WM_CreateRoleId::username() const {
  // @@protoc_insertion_point(field_get:Protocol.Gate.G2WM.MSG_G2WM_CreateRoleId.Username)
  return username_.GetNoArena();
}
inline void MSG_G2WM_CreateRoleId::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.Gate.G2WM.MSG_G2WM_CreateRoleId.Username)
}
#if LANG_CXX11
inline void MSG_G2WM_CreateRoleId::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Protocol.Gate.G2WM.MSG_G2WM_CreateRoleId.Username)
}
#endif
inline void MSG_G2WM_CreateRoleId::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.Gate.G2WM.MSG_G2WM_CreateRoleId.Username)
}
inline void MSG_G2WM_CreateRoleId::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.Gate.G2WM.MSG_G2WM_CreateRoleId.Username)
}
inline ::std::string* MSG_G2WM_CreateRoleId::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:Protocol.Gate.G2WM.MSG_G2WM_CreateRoleId.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MSG_G2WM_CreateRoleId::release_username() {
  // @@protoc_insertion_point(field_release:Protocol.Gate.G2WM.MSG_G2WM_CreateRoleId.Username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_G2WM_CreateRoleId::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Protocol.Gate.G2WM.MSG_G2WM_CreateRoleId.Username)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace G2WM
}  // namespace Gate
}  // namespace Protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Gate_2fProtocol_2fG2WM_2eCODE_2eproto__INCLUDED
